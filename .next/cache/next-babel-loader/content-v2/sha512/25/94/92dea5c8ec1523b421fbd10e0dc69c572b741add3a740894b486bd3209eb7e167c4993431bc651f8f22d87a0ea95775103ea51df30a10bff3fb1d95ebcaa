{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayhan\\\\Desktop\\\\react\\\\react-next-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  var _props$meetupData, _props$meetupData2, _props$meetupData3, _props$meetupData4;\n\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: (_props$meetupData = props.meetupData) === null || _props$meetupData === void 0 ? void 0 : _props$meetupData.image,\n    title: (_props$meetupData2 = props.meetupData) === null || _props$meetupData2 === void 0 ? void 0 : _props$meetupData2.title,\n    address: (_props$meetupData3 = props.meetupData) === null || _props$meetupData3 === void 0 ? void 0 : _props$meetupData3.address,\n    description: (_props$meetupData4 = props.meetupData) === null || _props$meetupData4 === void 0 ? void 0 : _props$meetupData4.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Ayhan/Desktop/react/react-next-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,uBAAEA,KAAK,CAACC,UAAR,sDAAE,kBAAkBC,KAD3B;AAEE,IAAA,KAAK,wBAAEF,KAAK,CAACC,UAAR,uDAAE,mBAAkBE,KAF3B;AAGE,IAAA,OAAO,wBAAEH,KAAK,CAACC,UAAR,uDAAE,mBAAkBG,OAH7B;AAIE,IAAA,WAAW,wBAAEJ,KAAK,CAACC,UAAR,uDAAE,mBAAkBI;AAJjC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData?.image}\r\n      title={props.meetupData?.title}\r\n      address={props.meetupData?.address}\r\n      description={props.meetupData?.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://PSMAyhan:ayhan2002@cluster0.jwnth.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://PSMAyhan:ayhan2002@cluster0.jwnth.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}